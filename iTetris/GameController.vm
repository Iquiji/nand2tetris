function GameController.new 0
push constant 4
call Memory.alloc 1
pop pointer 0
call PRNG.new 0
pop this 0
call Board.new 0
pop this 1
push pointer 0
call GameController.genNewPiece 1
pop this 2
push this 0
call PRNG.next 1
pop temp 0
push this 0
call PRNG.next 1
pop temp 0
push this 0
call PRNG.next 1
pop temp 0
push pointer 0
call GameController.genNewPiece 1
pop this 3
push pointer 0
return
function GameController.run 12
push argument 0
pop pointer 0
push constant 0
pop local 9
push constant 400
pop local 10
push constant 11
call String.new 1
push constant 67
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 108
call String.appendChar 2
push constant 108
call String.appendChar 2
push constant 105
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 105
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 58
call String.appendChar 2
pop local 0
push constant 4
call String.new 1
push constant 82
call String.appendChar 2
push constant 78
call String.appendChar 2
push constant 71
call String.appendChar 2
push constant 58
call String.appendChar 2
pop local 1
push constant 6
call String.new 1
push constant 83
call String.appendChar 2
push constant 99
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 58
call String.appendChar 2
pop local 2
push constant 6
call String.new 1
push constant 83
call String.appendChar 2
push constant 112
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 100
call String.appendChar 2
push constant 58
call String.appendChar 2
pop local 3
label WHILE_EXP0
push constant 0
not
not
if-goto WHILE_END0
push constant 0
pop local 7
push constant 0
pop local 5
push constant 1
pop local 6
push local 10
call Sys.wait 1
pop temp 0
call Keyboard.keyPressed 0
pop local 4
push local 4
push constant 65
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 2
call Piece.rotateLeft 1
pop temp 0
push this 2
push this 1
call Piece.collisionCheck 2
pop local 7
push local 7
push constant 0
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 2
call Piece.rotateRight 1
pop temp 0
label IF_FALSE1
label IF_FALSE0
push local 4
push constant 68
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 2
call Piece.rotateRight 1
pop temp 0
push this 2
push this 1
call Piece.collisionCheck 2
pop local 7
push local 7
push constant 0
gt
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 2
call Piece.rotateLeft 1
pop temp 0
label IF_FALSE3
label IF_FALSE2
push constant 0
pop local 7
push local 4
push constant 133
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push local 6
push constant 1
add
pop local 6
label IF_FALSE4
push local 4
push constant 130
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push local 5
push constant 1
sub
pop local 5
label IF_FALSE5
push local 4
push constant 132
eq
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push local 5
push constant 1
add
pop local 5
label IF_FALSE6
push this 2
push local 5
call Piece.moveX 2
pop temp 0
push this 2
push this 1
call Piece.collisionCheck 2
push constant 0
gt
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push this 2
push local 5
neg
call Piece.moveX 2
pop temp 0
label IF_FALSE7
push this 2
push local 6
call Piece.moveY 2
pop local 8
push local 7
push local 8
add
pop local 7
push local 7
push this 2
push this 1
call Piece.collisionCheck 2
add
pop local 7
push local 7
push constant 0
gt
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push local 7
push local 8
gt
if-goto IF_TRUE9
goto IF_FALSE9
label IF_TRUE9
push this 2
push local 6
neg
call Piece.moveY 2
pop temp 0
label IF_FALSE9
push this 2
push this 1
call Piece.integrate_piece_in_board 2
pop temp 0
push this 3
pop this 2
push pointer 0
call GameController.genNewPiece 1
pop this 3
label IF_FALSE8
push pointer 0
call GameController.flush 1
pop temp 0
push constant 0
push constant 0
call Output.moveCursor 2
pop temp 0
push local 0
call Output.printString 1
pop temp 0
call Output.println 0
pop temp 0
push local 7
call Output.printInt 1
pop temp 0
call Output.println 0
pop temp 0
push local 1
call Output.printString 1
pop temp 0
call Output.println 0
pop temp 0
push this 0
call PRNG.get 1
call Output.printInt 1
pop temp 0
call Output.println 0
pop temp 0
push local 3
call Output.printString 1
pop temp 0
call Output.println 0
pop temp 0
push local 10
call Output.printInt 1
pop temp 0
call Output.println 0
pop temp 0
call Output.println 0
pop temp 0
push local 2
call Output.printString 1
pop temp 0
call Output.println 0
pop temp 0
push local 9
call Output.printInt 1
pop temp 0
call Output.println 0
pop temp 0
push this 0
call PRNG.next 1
pop temp 0
push this 1
call Board.checkLines 1
pop local 11
push local 11
push constant 1
eq
if-goto IF_TRUE10
goto IF_FALSE10
label IF_TRUE10
push constant 400
push local 10
call Math.divide 2
pop local 11
push local 9
push local 11
add
pop local 9
push local 10
push local 11
push constant 2
call Math.divide 2
push constant 1
add
sub
pop local 10
label IF_FALSE10
push local 11
push constant 2
eq
if-goto IF_TRUE11
goto IF_FALSE11
label IF_TRUE11
push constant 1000
push local 10
call Math.divide 2
pop local 11
push local 9
push local 11
add
pop local 9
push local 10
push local 11
push constant 2
call Math.divide 2
sub
pop local 10
label IF_FALSE11
push local 11
push constant 3
eq
if-goto IF_TRUE12
goto IF_FALSE12
label IF_TRUE12
push constant 3000
push local 10
call Math.divide 2
pop local 11
push local 9
push local 11
add
pop local 9
push local 10
push local 11
push constant 2
call Math.divide 2
sub
pop local 10
label IF_FALSE12
push local 11
push constant 4
eq
if-goto IF_TRUE13
goto IF_FALSE13
label IF_TRUE13
push constant 12000
push local 10
call Math.divide 2
pop local 11
push local 9
push local 11
add
pop local 9
push local 10
push local 11
push constant 2
call Math.divide 2
sub
pop local 10
label IF_FALSE13
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function GameController.genNewPiece 2
push argument 0
pop pointer 0
push this 0
call PRNG.get 1
push constant 7
call PRNG.mod 2
pop local 0
push local 0
call Piece.new 1
pop local 1
push local 1
return
function GameController.flush 0
push argument 0
pop pointer 0
call Screen.clearScreen 0
pop temp 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 1
call Board.flush 1
pop temp 0
push this 2
call Piece.flush 1
pop temp 0
push this 3
call Piece.flush_next 1
pop temp 0
push constant 188
push constant 0
push constant 188
push constant 255
call Screen.drawLine 4
pop temp 0
push constant 316
push constant 0
push constant 316
push constant 255
call Screen.drawLine 4
pop temp 0
push constant 400
push constant 100
push constant 400
push constant 160
call Screen.drawLine 4
pop temp 0
push constant 400
push constant 100
push constant 460
push constant 100
call Screen.drawLine 4
pop temp 0
push constant 400
push constant 160
push constant 460
push constant 160
call Screen.drawLine 4
pop temp 0
push constant 460
push constant 100
push constant 460
push constant 160
call Screen.drawLine 4
pop temp 0
push constant 0
return
function GameController.dispose 0
push argument 0
pop pointer 0
push this 0
call PRNG.dispose 1
pop temp 0
push this 1
call Board.dispose 1
pop temp 0
push this 2
call Piece.dispose 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
