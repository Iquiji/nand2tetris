<tokens>
<keyword> class </keyword>
<identifier> Matrix2D </identifier>
<symbol> { </symbol>
<keyword> field </keyword>
<identifier> Array </identifier>
<identifier> columns </identifier>
<symbol> ; </symbol>
<keyword> field </keyword>
<keyword> int </keyword>
<identifier> width </identifier>
<symbol> , </symbol>
<identifier> height </identifier>
<symbol> ; </symbol>
<keyword> constructor </keyword>
<identifier> Matrix2D </identifier>
<identifier> new </identifier>
<symbol> ( </symbol>
<keyword> int </keyword>
<identifier> w </identifier>
<symbol> , </symbol>
<keyword> int </keyword>
<identifier> h </identifier>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> var </keyword>
<keyword> int </keyword>
<identifier> witdh_idx </identifier>
<symbol> , </symbol>
<identifier> height_idx </identifier>
<symbol> ; </symbol>
<keyword> var </keyword>
<identifier> Array </identifier>
<identifier> rows </identifier>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> width </identifier>
<symbol> = </symbol>
<identifier> h </identifier>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> height </identifier>
<symbol> = </symbol>
<identifier> w </identifier>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> columns </identifier>
<symbol> = </symbol>
<identifier> Array </identifier>
<symbol> . </symbol>
<identifier> new </identifier>
<symbol> ( </symbol>
<identifier> width </identifier>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> witdh_idx </identifier>
<symbol> = </symbol>
<integerConstant> 0 </integerConstant>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> height_idx </identifier>
<symbol> = </symbol>
<integerConstant> 0 </integerConstant>
<symbol> ; </symbol>
<keyword> while </keyword>
<symbol> ( </symbol>
<identifier> witdh_idx </identifier>
<symbol> &lt; </symbol>
<identifier> width </identifier>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> let </keyword>
<identifier> columns </identifier>
<symbol> [ </symbol>
<identifier> witdh_idx </identifier>
<symbol> ] </symbol>
<symbol> = </symbol>
<identifier> Array </identifier>
<symbol> . </symbol>
<identifier> new </identifier>
<symbol> ( </symbol>
<identifier> height </identifier>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> while </keyword>
<symbol> ( </symbol>
<identifier> height_idx </identifier>
<symbol> &lt; </symbol>
<identifier> height </identifier>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> let </keyword>
<identifier> rows </identifier>
<symbol> = </symbol>
<identifier> columns </identifier>
<symbol> [ </symbol>
<identifier> witdh_idx </identifier>
<symbol> ] </symbol>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> rows </identifier>
<symbol> [ </symbol>
<identifier> height_idx </identifier>
<symbol> ] </symbol>
<symbol> = </symbol>
<integerConstant> 0 </integerConstant>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> height_idx </identifier>
<symbol> = </symbol>
<identifier> height_idx </identifier>
<symbol> + </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> let </keyword>
<identifier> height_idx </identifier>
<symbol> = </symbol>
<integerConstant> 0 </integerConstant>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> witdh_idx </identifier>
<symbol> = </symbol>
<identifier> witdh_idx </identifier>
<symbol> + </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> return </keyword>
<keyword> this </keyword>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> method </keyword>
<keyword> int </keyword>
<identifier> get </identifier>
<symbol> ( </symbol>
<keyword> int </keyword>
<identifier> w </identifier>
<symbol> , </symbol>
<keyword> int </keyword>
<identifier> h </identifier>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> var </keyword>
<keyword> int </keyword>
<identifier> res </identifier>
<symbol> ; </symbol>
<keyword> var </keyword>
<keyword> int </keyword>
<identifier> rows </identifier>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> rows </identifier>
<symbol> = </symbol>
<identifier> columns </identifier>
<symbol> [ </symbol>
<identifier> h </identifier>
<symbol> ] </symbol>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> res </identifier>
<symbol> = </symbol>
<identifier> rows </identifier>
<symbol> [ </symbol>
<identifier> w </identifier>
<symbol> ] </symbol>
<symbol> ; </symbol>
<keyword> return </keyword>
<identifier> res </identifier>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> method </keyword>
<keyword> void </keyword>
<identifier> set </identifier>
<symbol> ( </symbol>
<keyword> int </keyword>
<identifier> w </identifier>
<symbol> , </symbol>
<keyword> int </keyword>
<identifier> h </identifier>
<symbol> , </symbol>
<keyword> int </keyword>
<identifier> val </identifier>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> var </keyword>
<keyword> int </keyword>
<identifier> rows </identifier>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> rows </identifier>
<symbol> = </symbol>
<identifier> columns </identifier>
<symbol> [ </symbol>
<identifier> h </identifier>
<symbol> ] </symbol>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> rows </identifier>
<symbol> [ </symbol>
<identifier> w </identifier>
<symbol> ] </symbol>
<symbol> = </symbol>
<identifier> val </identifier>
<symbol> ; </symbol>
<keyword> return </keyword>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> method </keyword>
<keyword> void </keyword>
<identifier> print </identifier>
<symbol> ( </symbol>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> var </keyword>
<keyword> int </keyword>
<identifier> witdh_idx </identifier>
<symbol> , </symbol>
<identifier> height_idx </identifier>
<symbol> ; </symbol>
<keyword> var </keyword>
<keyword> int </keyword>
<identifier> to_print </identifier>
<symbol> ; </symbol>
<keyword> var </keyword>
<identifier> Array </identifier>
<identifier> rows </identifier>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> witdh_idx </identifier>
<symbol> = </symbol>
<integerConstant> 0 </integerConstant>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> height_idx </identifier>
<symbol> = </symbol>
<integerConstant> 0 </integerConstant>
<symbol> ; </symbol>
<keyword> while </keyword>
<symbol> ( </symbol>
<identifier> witdh_idx </identifier>
<symbol> &lt; </symbol>
<identifier> width </identifier>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> while </keyword>
<symbol> ( </symbol>
<identifier> height_idx </identifier>
<symbol> &lt; </symbol>
<identifier> height </identifier>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> let </keyword>
<identifier> rows </identifier>
<symbol> = </symbol>
<identifier> columns </identifier>
<symbol> [ </symbol>
<identifier> witdh_idx </identifier>
<symbol> ] </symbol>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> to_print </identifier>
<symbol> = </symbol>
<identifier> rows </identifier>
<symbol> [ </symbol>
<identifier> height_idx </identifier>
<symbol> ] </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Output </identifier>
<symbol> . </symbol>
<identifier> printInt </identifier>
<symbol> ( </symbol>
<identifier> to_print </identifier>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Output </identifier>
<symbol> . </symbol>
<identifier> printChar </identifier>
<symbol> ( </symbol>
<integerConstant> 32 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> height_idx </identifier>
<symbol> = </symbol>
<identifier> height_idx </identifier>
<symbol> + </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> do </keyword>
<identifier> Output </identifier>
<symbol> . </symbol>
<identifier> println </identifier>
<symbol> ( </symbol>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> height_idx </identifier>
<symbol> = </symbol>
<integerConstant> 0 </integerConstant>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> witdh_idx </identifier>
<symbol> = </symbol>
<identifier> witdh_idx </identifier>
<symbol> + </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> return </keyword>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> method </keyword>
<keyword> void </keyword>
<identifier> dispose </identifier>
<symbol> ( </symbol>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> do </keyword>
<identifier> columns </identifier>
<symbol> . </symbol>
<identifier> dispose </identifier>
<symbol> ( </symbol>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> deAlloc </identifier>
<symbol> ( </symbol>
<keyword> this </keyword>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> return </keyword>
<symbol> ; </symbol>
<symbol> } </symbol>
<symbol> } </symbol>
</tokens>