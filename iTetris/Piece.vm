function Piece.new 0
push constant 5
call Memory.alloc 1
pop pointer 0
push argument 0
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 4
pop this 1
push constant 1
pop this 2
push this 1
push this 2
call Matrix2D.new 2
pop this 0
push this 0
push constant 0
push constant 0
push constant 1
call Matrix2D.set 4
pop temp 0
push this 0
push constant 1
push constant 0
push constant 1
call Matrix2D.set 4
pop temp 0
push this 0
push constant 2
push constant 0
push constant 1
call Matrix2D.set 4
pop temp 0
push this 0
push constant 3
push constant 0
push constant 1
call Matrix2D.set 4
pop temp 0
label IF_FALSE0
push argument 0
push constant 1
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 3
pop this 1
push constant 2
pop this 2
push this 1
push this 2
call Matrix2D.new 2
pop this 0
push this 0
push constant 0
push constant 0
push constant 1
call Matrix2D.set 4
pop temp 0
push this 0
push constant 0
push constant 1
push constant 1
call Matrix2D.set 4
pop temp 0
push this 0
push constant 1
push constant 1
push constant 1
call Matrix2D.set 4
pop temp 0
push this 0
push constant 2
push constant 1
push constant 1
call Matrix2D.set 4
pop temp 0
label IF_FALSE1
push argument 0
push constant 2
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 3
pop this 1
push constant 2
pop this 2
push this 1
push this 2
call Matrix2D.new 2
pop this 0
push this 0
push constant 0
push constant 1
push constant 1
call Matrix2D.set 4
pop temp 0
push this 0
push constant 1
push constant 1
push constant 1
call Matrix2D.set 4
pop temp 0
push this 0
push constant 2
push constant 1
push constant 1
call Matrix2D.set 4
pop temp 0
push this 0
push constant 2
push constant 0
push constant 1
call Matrix2D.set 4
pop temp 0
label IF_FALSE2
push argument 0
push constant 3
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 2
pop this 1
push constant 2
pop this 2
push this 1
push this 2
call Matrix2D.new 2
pop this 0
push this 0
push constant 0
push constant 0
push constant 1
call Matrix2D.set 4
pop temp 0
push this 0
push constant 1
push constant 0
push constant 1
call Matrix2D.set 4
pop temp 0
push this 0
push constant 0
push constant 1
push constant 1
call Matrix2D.set 4
pop temp 0
push this 0
push constant 1
push constant 1
push constant 1
call Matrix2D.set 4
pop temp 0
label IF_FALSE3
push argument 0
push constant 4
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 3
pop this 1
push constant 2
pop this 2
push this 1
push this 2
call Matrix2D.new 2
pop this 0
push this 0
push constant 0
push constant 1
push constant 1
call Matrix2D.set 4
pop temp 0
push this 0
push constant 1
push constant 0
push constant 1
call Matrix2D.set 4
pop temp 0
push this 0
push constant 1
push constant 1
push constant 1
call Matrix2D.set 4
pop temp 0
push this 0
push constant 2
push constant 0
push constant 1
call Matrix2D.set 4
pop temp 0
label IF_FALSE4
push argument 0
push constant 5
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push constant 3
pop this 1
push constant 2
pop this 2
push this 1
push this 2
call Matrix2D.new 2
pop this 0
push this 0
push constant 0
push constant 1
push constant 1
call Matrix2D.set 4
pop temp 0
push this 0
push constant 1
push constant 1
push constant 1
call Matrix2D.set 4
pop temp 0
push this 0
push constant 2
push constant 1
push constant 1
call Matrix2D.set 4
pop temp 0
push this 0
push constant 1
push constant 0
push constant 1
call Matrix2D.set 4
pop temp 0
label IF_FALSE5
push argument 0
push constant 6
eq
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push constant 3
pop this 1
push constant 2
pop this 2
push this 1
push this 2
call Matrix2D.new 2
pop this 0
push this 0
push constant 0
push constant 0
push constant 1
call Matrix2D.set 4
pop temp 0
push this 0
push constant 1
push constant 0
push constant 1
call Matrix2D.set 4
pop temp 0
push this 0
push constant 1
push constant 1
push constant 1
call Matrix2D.set 4
pop temp 0
push this 0
push constant 2
push constant 1
push constant 1
call Matrix2D.set 4
pop temp 0
label IF_FALSE6
push constant 4
pop this 3
push constant 0
pop this 4
push pointer 0
return
function Piece.getX 0
push argument 0
pop pointer 0
push this 3
return
function Piece.getY 0
push argument 0
pop pointer 0
push this 4
return
function Piece.getSizeX 0
push argument 0
pop pointer 0
push this 1
return
function Piece.getSizeY 0
push argument 0
pop pointer 0
push this 2
return
function Piece.getShape 0
push argument 0
pop pointer 0
push this 0
return
function Piece.moveX 0
push argument 0
pop pointer 0
push this 3
push argument 1
add
pop this 3
push this 3
push constant 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
pop this 3
label IF_FALSE0
push this 3
push this 1
add
push constant 10
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 10
push this 1
sub
pop this 3
label IF_FALSE1
push constant 0
return
function Piece.moveY 0
push argument 0
pop pointer 0
push this 4
push argument 1
add
pop this 4
push this 4
push this 2
add
push constant 21
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 21
push this 2
sub
pop this 4
push constant 1
return
label IF_FALSE0
push this 4
push this 2
add
push constant 21
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 21
push this 2
sub
pop this 4
push constant 1
return
label IF_FALSE1
push constant 0
return
function Piece.rotateRight 6
push argument 0
pop pointer 0
push this 2
push this 1
call Matrix2D.new 2
pop local 0
push constant 0
pop local 1
push constant 0
pop local 2
label WHILE_EXP0
push local 1
push this 1
lt
not
if-goto WHILE_END0
label WHILE_EXP1
push local 2
push this 2
lt
not
if-goto WHILE_END1
push this 0
push local 1
push local 2
call Matrix2D.get 3
pop local 5
push local 0
push local 2
push local 1
push local 5
call Matrix2D.set 4
pop temp 0
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP1
label WHILE_END1
push constant 0
pop local 2
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push this 1
pop local 3
push this 2
pop this 1
push local 3
pop this 2
push local 0
pop this 0
push this 1
push this 2
call Matrix2D.new 2
pop local 0
push constant 0
pop local 1
push constant 0
pop local 2
label WHILE_EXP2
push local 1
push this 1
lt
not
if-goto WHILE_END2
label WHILE_EXP3
push local 2
push this 2
lt
not
if-goto WHILE_END3
push this 0
push local 1
push local 2
call Matrix2D.get 3
pop local 5
push this 1
push constant 1
sub
push local 1
sub
pop local 4
push local 0
push local 4
push local 2
push local 5
call Matrix2D.set 4
pop temp 0
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP3
label WHILE_END3
push constant 0
pop local 2
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP2
label WHILE_END2
push local 0
pop this 0
push constant 0
return
function Piece.rotateLeft 6
push argument 0
pop pointer 0
push this 2
push this 1
call Matrix2D.new 2
pop local 0
push constant 0
pop local 1
push constant 0
pop local 2
label WHILE_EXP0
push local 1
push this 1
lt
not
if-goto WHILE_END0
label WHILE_EXP1
push local 2
push this 2
lt
not
if-goto WHILE_END1
push this 0
push local 1
push local 2
call Matrix2D.get 3
pop local 5
push local 0
push local 2
push local 1
push local 5
call Matrix2D.set 4
pop temp 0
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP1
label WHILE_END1
push constant 0
pop local 2
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push this 1
pop local 3
push this 2
pop this 1
push local 3
pop this 2
push local 0
pop this 0
push this 1
push this 2
call Matrix2D.new 2
pop local 0
push constant 0
pop local 1
push constant 0
pop local 2
label WHILE_EXP2
push local 1
push this 1
lt
not
if-goto WHILE_END2
label WHILE_EXP3
push local 2
push this 2
lt
not
if-goto WHILE_END3
push this 0
push local 1
push local 2
call Matrix2D.get 3
pop local 5
push this 2
push constant 1
sub
push local 2
sub
pop local 4
push local 0
push local 1
push local 4
push local 5
call Matrix2D.set 4
pop temp 0
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP3
label WHILE_END3
push constant 0
pop local 2
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP2
label WHILE_END2
push local 0
pop this 0
push constant 0
return
function Piece.flush 5
push argument 0
pop pointer 0
push constant 0
pop local 0
push constant 0
pop local 1
label WHILE_EXP0
push local 0
push this 1
lt
not
if-goto WHILE_END0
label WHILE_EXP1
push local 1
push this 2
lt
not
if-goto WHILE_END1
push this 0
push local 0
push local 1
call Matrix2D.get 3
pop local 2
push local 2
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 16
push this 3
add
push local 0
add
push constant 12
call Math.multiply 2
pop local 3
push this 4
push local 1
add
push constant 12
call Math.multiply 2
pop local 4
push local 3
push local 4
push local 3
push constant 11
add
push local 4
push constant 11
add
call Screen.drawRectangle 4
pop temp 0
label IF_FALSE0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
call Output.println 0
pop temp 0
push constant 0
pop local 1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Piece.flush_next 5
push argument 0
pop pointer 0
push constant 0
pop local 0
push constant 0
pop local 1
label WHILE_EXP0
push local 0
push this 1
lt
not
if-goto WHILE_END0
label WHILE_EXP1
push local 1
push this 2
lt
not
if-goto WHILE_END1
push this 0
push local 0
push local 1
call Matrix2D.get 3
pop local 2
push local 2
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 30
push this 3
add
push local 0
add
push constant 12
call Math.multiply 2
pop local 3
push constant 10
push local 1
add
push constant 12
call Math.multiply 2
pop local 4
push local 3
push local 4
push local 3
push constant 11
add
push local 4
push constant 11
add
call Screen.drawRectangle 4
pop temp 0
label IF_FALSE0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
call Output.println 0
pop temp 0
push constant 0
pop local 1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Piece.collisionCheck 5
push argument 0
pop pointer 0
push constant 0
pop local 2
label WHILE_EXP0
push local 0
push this 1
lt
not
if-goto WHILE_END0
label WHILE_EXP1
push local 1
push this 2
lt
not
if-goto WHILE_END1
push this 0
push local 0
push local 1
call Matrix2D.get 3
pop local 4
push local 4
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 1
push this 3
push local 0
add
push this 4
push local 1
add
call Board.get 3
pop local 3
push local 3
push constant 1
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 2
push constant 1
add
pop local 2
label IF_FALSE1
label IF_FALSE0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push constant 0
pop local 1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push local 2
return
function Piece.integrate_piece_in_board 5
push argument 0
pop pointer 0
push constant 0
pop local 2
label WHILE_EXP0
push local 0
push this 1
lt
not
if-goto WHILE_END0
label WHILE_EXP1
push local 1
push this 2
lt
not
if-goto WHILE_END1
push this 0
push local 0
push local 1
call Matrix2D.get 3
pop local 4
push local 4
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 1
push this 3
push local 0
add
push this 4
push local 1
add
push constant 1
call Board.set 4
pop temp 0
label IF_FALSE0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push constant 0
pop local 1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Piece.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
